// prisma/schema.prisma
datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                 Int          @id @default(autoincrement())
  name               String
  jobTitle           String?
  skills             String
  posts              Post[]
  comments           Comment[]
  sentMessages       Message[]    @relation("sentMessages")
  receivedMessages   Message[]    @relation("receivedMessages")
  connectionsAsUser1 Connection[] @relation("User1Connections")
  connectionsAsUser2 Connection[] @relation("User2Connections")
}

model Post {
  id        Int       @id @default(autoincrement())
  content   String
  mediaUrl  String?
  authorId  Int
  author    User      @relation(fields: [authorId], references: [id])
  comments  Comment[]
  createdAt DateTime  @default(now())
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  postId    Int
  post      Post     @relation(fields: [postId], references: [id])
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
}

model Connection {
  id      Int  @id @default(autoincrement())
  user1Id Int
  user2Id Int
  user1   User @relation(name: "User1Connections", fields: [user1Id], references: [id])
  user2   User @relation(name: "User2Connections", fields: [user2Id], references: [id])
}

model Message {
  id         Int      @id @default(autoincrement())
  content    String
  senderId   Int
  receiverId Int
  sentAt     DateTime @default(now())

  sender   User @relation("sentMessages", fields: [senderId], references: [id])
  receiver User @relation("receivedMessages", fields: [receiverId], references: [id])
}
